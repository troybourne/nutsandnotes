/*
 * USE THIS ONE FOR HEAT TREATING... 1-9-2020 added a 5 second delay after a fault trigger... and upped the overload to 220
 * 
  Smoothing

  Reads repeatedly from an analog input, calculating a running average and
  printing it to the computer. Keeps ten readings in an array and continually
  averages them.

  The circuit:
  - analog sensor (potentiometer will do) attached to analog input 0

  created 22 Apr 2007
  by David A. Mellis  <dam@mellis.org>
  modified 9 Apr 2012
  by Tom Igoe

  This example code is in the public domain.

  http://www.arduino.cc/en/Tutorial/Smoothing

Troy's notes
Alarm button is continuity between pin 6 and ground
Amp Sensor ground and A0
Relay is + to 5v, neg to ground and signal to pin 7
*/
// Define the number of samples to keep track of. The higher the number, the
// more the readings will be smoothed, but the slower the output will respond to
// the input. Using a constant rather than a normal variable lets us use this
// value to determine the size of the readings array.
const int numReadings = 100;

int readings[numReadings];      // the readings from the analog input
int readIndex = 0;              // the index of the current reading
int total = 0;                  // the running total
int average = 0;                // the average
const int relayPin = 7;
const int sensorThreshold = 0;
const int overLoad = 220;
const int alarmPauseButton = 6;
int inputPin = A0;

void setup() {
  // initialize serial communication with computer:
  Serial.begin(9600);
  pinMode(relayPin, OUTPUT);
  pinMode(alarmPauseButton, INPUT_PULLUP);
  // initialize all the readings to 0:
  for (int thisReading = 0; thisReading < numReadings; thisReading++) {
    readings[thisReading] = 0;
  }
  Serial.println("new3");
  delay(2000);
}

void loop() {
  // subtract the last reading:
  total = total - readings[readIndex];
  // read from the sensor:
  readings[readIndex] = analogRead(inputPin);
  // add the reading to the total:
  total = total + readings[readIndex];
  // advance to the next position in the array:
  readIndex = readIndex + 1;

  // if we're at the end of the array...
  if (readIndex >= numReadings) {
    // ...wrap around to the beginning:
    readIndex = 0;
  }

  // calculate the average:
  average = total / numReadings;
  // send it to the computer as ASCII digits
  Serial.println(average);
  delay(1);        // delay in between reads for stability

//add case for button press and relay state
bool buttonPress = digitalRead(alarmPauseButton);
//  Serial.println(average);

switch(buttonPress){
  case 0: //deactivate alarm for 5 minutes
    digitalWrite(relayPin, LOW);
    Serial.println("button pressed");
    delay(300000);

  case 1:
  if(average > sensorThreshold && average < overLoad) {
    digitalWrite(relayPin, LOW);
    Serial.println("case 1");
    break;
  } else {
    digitalWrite(relayPin, HIGH);
    Serial.println("case 1 no power NEW");
    delay(5000);
    break;

  // wait 2 milliseconds before the next loop for the analog-to-digital
  // converter to settle after the last reading:
  //delay(1500);

}
}
}
